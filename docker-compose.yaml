version: "3.9"

services:
#  cart:
#    build:
#      context: .
#      dockerfile: docker/cart/Dockerfile
#    restart: unless-stopped
#    networks:
#      - service
#    depends_on:
#      - cart-postgres
#    links:
#      - cart-postgres
#    ports:
#      - "8082:8082" # gRPC
#    volumes:
#      - ./config.yml:/root/config.yml

  cart-postgres:
    image: postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: cart_db
      APP_DB_USER: cart_user
      APP_DB_PASS: cart
    networks:
      - service
    ports:
      - "5432:5432"
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    volumes:
      - ./docker/cart-postgres/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./docker/cart-postgres/pg_hba.conf:/etc/postgresql/pg_hba.conf
      - ./docker/cart-postgres/init-database.sh:/docker-entrypoint-initdb.d/init-database.sh
      - ./_data/cart/pgdata:/var/lib/postgresql/data

  cart-replica-1:
    image: postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: cart_replica_1_db
      APP_DB_USER: cart_replica_1_user
      APP_DB_PASS: cart_replica_1
      CART_DB_USER: cart_user
      CART_DB_PASS: cart
    networks:
      - service
    depends_on:
      - cart-postgres
#    links:
#      - cart-postgres
    ports:
      - "5435:5432"
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    volumes:
      - ./docker/cart-replica-1/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./docker/cart-replica-1/pg_hba.conf:/etc/postgresql/pg_hba.conf
      - ./docker/cart-replica-1/init-database.sh:/docker-entrypoint-initdb.d/init-database.sh
      - ./_data/cart1/pgdata:/var/lib/postgresql/data

#  order:
#    build:
#      context: .
#      dockerfile: docker/order/Dockerfile
#    restart: unless-stopped
#    networks:
#      - service
#    depends_on:
#      - cart
#      - order-postgres
#      - kafka
#    links:
#      - cart
#      - order-postgres
#      - kafka
#    ports:
#      - "8081:8081" # gRPC
#    volumes:
#      - ./config.yml:/root/config.yml
#
#  order-postgres:
#    image: postgres:latest
#    restart: unless-stopped
#    environment:
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: postgres
#      POSTGRES_DB: order_db
#      APP_DB_USER: order_user
#      APP_DB_PASS: order
#    networks:
#      - service
#    ports:
#      - "5433:5432"
#    command: postgres -c config_file=/etc/postgresql/postgresql.conf
#    volumes:
#      - ./docker/order-postgres/postgresql.conf:/etc/postgresql/postgresql.conf
#      - ./docker/order-postgres/pg_hba.conf:/etc/postgresql/pg_hba.conf
#      - ./docker/order-postgres/init-database.sh:/docker-entrypoint-initdb.d/init-database.sh
#      - ./_data/order/pgdata:/var/lib/postgresql/data
#
#  reserve:
#    build:
#      context: .
#      dockerfile: docker/reserve/Dockerfile
#    restart: unless-stopped
#    networks:
#      - service
#    depends_on:
#      - reserve-postgres
#      - kafka
#    links:
#      - reserve-postgres
#      - kafka
#    ports:
#      - "8083:8083" # gRPC
#    volumes:
#      - ./config.yml:/root/config.yml
#
#  reserve-postgres:
#    image: postgres:latest
#    restart: unless-stopped
#    environment:
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: postgres
#      POSTGRES_DB: reserve_db
#      APP_DB_USER: reserve_user
#      APP_DB_PASS: reserve
#    networks:
#      - service
#    ports:
#      - "5434:5432"
#    command: postgres -c config_file=/etc/postgresql/postgresql.conf
#    volumes:
#      - ./docker/reserve-postgres/postgresql.conf:/etc/postgresql/postgresql.conf
#      - ./docker/reserve-postgres/pg_hba.conf:/etc/postgresql/pg_hba.conf
#      - ./docker/reserve-postgres/init-database.sh:/docker-entrypoint-initdb.d/init-database.sh
#      - ./_data/reserve/pgdata:/var/lib/postgresql/data
#
#  zookeeper:
#    image: confluentinc/cp-zookeeper
#    restart: unless-stopped
#    logging:
#      driver: 'gelf'
#      options:
#        gelf-address: 'udp://localhost:12201'
#        tag: zookeeper
#    ports:
#      - "2181:2181"
#    environment:
#      zk_id: "1"
#      ZOOKEEPER_CLIENT_PORT: 32181
#      ZOOKEEPER_TICK_TIME: 2000
#      ZOOKEEPER_SYNC_LIMIT: 4
#    networks:
#      - service
#
#  kafka:
#    image: confluentinc/cp-kafka
#    restart: unless-stopped
#    logging:
#      driver: 'gelf'
#      options:
#        gelf-address: 'udp://localhost:12201'
#        tag: kafka
#    depends_on:
#      - zookeeper
#    ports:
#      - "9094:9094"
#    environment:
#      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:32181"
#      KAFKA_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://kafka:9094
#      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://localhost:9094
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#    command: sh -c "((sleep 15 && kafka-topics --create --zookeeper zookeeper:32181 --replication-factor 1 --partitions 1 --topic templates)&) && /etc/confluent/docker/run"
#    networks:
#      - service
#
#  kafka-ui:
#    image: obsidiandynamics/kafdrop
#    restart: unless-stopped
#    depends_on:
#      - kafka
#    ports:
#      - "9001:9001"
#    environment:
#      SERVER_PORT: 9001
#      KAFKA_BROKERCONNECT: "kafka:9092"
#      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
#    networks:
#      - service

volumes:
  pgdata:
    driver: local

networks:
  service:
    driver: bridge
